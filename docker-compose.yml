
services:
  dtc-service:
    image: dtc-service:01
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/diagnostics
      SPRING_DATASOURCE_USERNAME: diagnostics_user
      SPRING_DATASOURCE_PASSWORD: diagnostics_pass
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - postgres
      - kafka

  vehicle-health-service:
    image: vehicle-health-service:01  # Use your built image tag here
    ports:
      - "8081:8080"  # Change host port if needed to avoid conflicts
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/diagnostics
      SPRING_DATASOURCE_USERNAME: diagnostics_user
      SPRING_DATASOURCE_PASSWORD: diagnostics_pass
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - postgres
      - kafka
  loki:
    image: grafana/loki:2.9.2
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail:2.9.2
    volumes:
      - /var/log:/var/log
      - ./promtail-config.yml:/etc/promtail/promtail.yml
    command: -config.file=/etc/promtail/promtail.yml
  grafana:
    image: grafana/grafana:10.3.1
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    ports: [2181:2181]
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports: [9092:9092]
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on: [zookeeper]

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: diagnostics
      POSTGRES_USER: diagnostics_user
      POSTGRES_PASSWORD: diagnostics_pass
    ports: [5432:5432]
    volumes:
      - postgres-data:/var/lib/postgresql/data

volumes:
  postgres-data:
  grafana-storage: